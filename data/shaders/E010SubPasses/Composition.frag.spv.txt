Composition.frag
// Module Version 10000
// Generated by (magic number): 80008
// Id's are bound by 138

                              Capability Shader
                              Capability InputAttachment
               2:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 5  "main" 132
                              ExecutionMode 5 OriginUpperLeft
               1:             String  "Composition.frag"
                              Source GLSL 450 1  "// OpModuleProcessed client vulkan100
// OpModuleProcessed target-env vulkan1.0
// OpModuleProcessed entry-point main
#line 1
#version 450

#define MAX_NUM_LIGHTS 128

layout (constant_id = 0) const int NUM_LIGHTS = 0;

layout (input_attachment_index = 0, set = 2, binding = 0) uniform subpassInput inputPosition;
layout (input_attachment_index = 1, set = 2, binding = 1) uniform subpassInput inputNormal;
layout (input_attachment_index = 2, set = 2, binding = 2) uniform subpassInput inputColor;

struct Light {
	vec4 position;
	vec3 color;
	float radius;
};

layout(set=1, binding=0) uniform PerView{
	mat4 view;
    mat4 proj;
	vec4 eyePos;
	
	vec4 ambient;
	Light lights[MAX_NUM_LIGHTS];
};

layout(location = 0) out vec4 outColor;

void main() {

	// Read G-Buffer values from previous sub pass
	vec3 fragPos = subpassLoad(inputPosition).rgb;
	vec3 normal = subpassLoad(inputNormal).rgb;
	vec4 albedo = subpassLoad(inputColor);
	
	// Ambient part
	vec3 fragcolor  = albedo.rgb * ambient.xyz;
	
	for(int i = 0; i < NUM_LIGHTS; ++i)
	{
		// Vector to light
		vec3 L = lights[i].position.xyz - fragPos;
		// Distance from light to fragment position
		float dist = length(L);

		// Viewer to fragment
		vec3 V = eyePos.xyz - fragPos;
		V = normalize(V);
		
		// Light to fragment
		L = normalize(L);

		// Attenuation
		float atten = lights[i].radius / (pow(dist, 2.0) + 1.0);

		// Diffuse part
		vec3 N = normalize(normal);
		float NdotL = max(0.0, dot(N, L));
		vec3 diff = lights[i].color * albedo.rgb * NdotL * atten;

		// Specular part
		// Specular map values are stored in alpha of albedo mrt
		vec3 R = reflect(-L, N);
		float NdotR = max(0.0, dot(R, V));
		//vec3 spec = lights[i].color * albedo.a * pow(NdotR, 32.0) * atten;

		fragcolor += diff;// + spec;	
	}    	
   
	outColor = vec4(fragcolor, 1.0);
}
"
                              Name 5  "main"
                              Name 10  "fragPos"
                              Name 13  "inputPosition"
                              Name 22  "normal"
                              Name 23  "inputNormal"
                              Name 28  "albedo"
                              Name 29  "inputColor"
                              Name 32  "fragcolor"
                              Name 36  "Light"
                              MemberName 36(Light) 0  "position"
                              MemberName 36(Light) 1  "color"
                              MemberName 36(Light) 2  "radius"
                              Name 40  "PerView"
                              MemberName 40(PerView) 0  "view"
                              MemberName 40(PerView) 1  "proj"
                              MemberName 40(PerView) 2  "eyePos"
                              MemberName 40(PerView) 3  "ambient"
                              MemberName 40(PerView) 4  "lights"
                              Name 42  ""
                              Name 50  "i"
                              Name 57  "NUM_LIGHTS"
                              Name 60  "L"
                              Name 69  "dist"
                              Name 72  "V"
                              Name 83  "atten"
                              Name 94  "N"
                              Name 97  "NdotL"
                              Name 103  "diff"
                              Name 116  "R"
                              Name 121  "NdotR"
                              Name 132  "outColor"
                              Decorate 13(inputPosition) DescriptorSet 2
                              Decorate 13(inputPosition) Binding 0
                              Decorate 13(inputPosition) InputAttachmentIndex 0
                              Decorate 23(inputNormal) DescriptorSet 2
                              Decorate 23(inputNormal) Binding 1
                              Decorate 23(inputNormal) InputAttachmentIndex 1
                              Decorate 29(inputColor) DescriptorSet 2
                              Decorate 29(inputColor) Binding 2
                              Decorate 29(inputColor) InputAttachmentIndex 2
                              MemberDecorate 36(Light) 0 Offset 0
                              MemberDecorate 36(Light) 1 Offset 16
                              MemberDecorate 36(Light) 2 Offset 28
                              Decorate 39 ArrayStride 32
                              MemberDecorate 40(PerView) 0 ColMajor
                              MemberDecorate 40(PerView) 0 Offset 0
                              MemberDecorate 40(PerView) 0 MatrixStride 16
                              MemberDecorate 40(PerView) 1 ColMajor
                              MemberDecorate 40(PerView) 1 Offset 64
                              MemberDecorate 40(PerView) 1 MatrixStride 16
                              MemberDecorate 40(PerView) 2 Offset 128
                              MemberDecorate 40(PerView) 3 Offset 144
                              MemberDecorate 40(PerView) 4 Offset 160
                              Decorate 40(PerView) Block
                              Decorate 42 DescriptorSet 1
                              Decorate 42 Binding 0
                              Decorate 57(NUM_LIGHTS) SpecId 0
                              Decorate 132(outColor) Location 0
               3:             TypeVoid
               4:             TypeFunction 3
               7:             TypeFloat 32
               8:             TypeVector 7(float) 3
               9:             TypePointer Function 8(fvec3)
              11:             TypeImage 7(float) SubpassData nonsampled format:Unknown
              12:             TypePointer UniformConstant 11
13(inputPosition):     12(ptr) Variable UniformConstant
              15:             TypeInt 32 1
              16:     15(int) Constant 0
              17:             TypeVector 15(int) 2
              18:   17(ivec2) ConstantComposite 16 16
              19:             TypeVector 7(float) 4
 23(inputNormal):     12(ptr) Variable UniformConstant
              27:             TypePointer Function 19(fvec4)
  29(inputColor):     12(ptr) Variable UniformConstant
              35:             TypeMatrix 19(fvec4) 4
       36(Light):             TypeStruct 19(fvec4) 8(fvec3) 7(float)
              37:             TypeInt 32 0
              38:     37(int) Constant 128
              39:             TypeArray 36(Light) 38
     40(PerView):             TypeStruct 35 35 19(fvec4) 19(fvec4) 39
              41:             TypePointer Uniform 40(PerView)
              42:     41(ptr) Variable Uniform
              43:     15(int) Constant 3
              44:             TypePointer Uniform 19(fvec4)
              49:             TypePointer Function 15(int)
  57(NUM_LIGHTS):     15(int) SpecConstant 0
              58:             TypeBool
              61:     15(int) Constant 4
              68:             TypePointer Function 7(float)
              73:     15(int) Constant 2
              85:             TypePointer Uniform 7(float)
              89:    7(float) Constant 1073741824
              91:    7(float) Constant 1065353216
              98:    7(float) Constant 0
             105:     15(int) Constant 1
             106:             TypePointer Uniform 8(fvec3)
             131:             TypePointer Output 19(fvec4)
   132(outColor):    131(ptr) Variable Output
         5(main):           3 Function None 4
               6:             Label
     10(fragPos):      9(ptr) Variable Function
      22(normal):      9(ptr) Variable Function
      28(albedo):     27(ptr) Variable Function
   32(fragcolor):      9(ptr) Variable Function
           50(i):     49(ptr) Variable Function
           60(L):      9(ptr) Variable Function
        69(dist):     68(ptr) Variable Function
           72(V):      9(ptr) Variable Function
       83(atten):     68(ptr) Variable Function
           94(N):      9(ptr) Variable Function
       97(NdotL):     68(ptr) Variable Function
       103(diff):      9(ptr) Variable Function
          116(R):      9(ptr) Variable Function
      121(NdotR):     68(ptr) Variable Function
                              Line 1 31 0
              14:          11 Load 13(inputPosition)
              20:   19(fvec4) ImageRead 14 18
              21:    8(fvec3) VectorShuffle 20 20 0 1 2
                              Store 10(fragPos) 21
                              Line 1 32 0
              24:          11 Load 23(inputNormal)
              25:   19(fvec4) ImageRead 24 18
              26:    8(fvec3) VectorShuffle 25 25 0 1 2
                              Store 22(normal) 26
                              Line 1 33 0
              30:          11 Load 29(inputColor)
              31:   19(fvec4) ImageRead 30 18
                              Store 28(albedo) 31
                              Line 1 36 0
              33:   19(fvec4) Load 28(albedo)
              34:    8(fvec3) VectorShuffle 33 33 0 1 2
              45:     44(ptr) AccessChain 42 43
              46:   19(fvec4) Load 45
              47:    8(fvec3) VectorShuffle 46 46 0 1 2
              48:    8(fvec3) FMul 34 47
                              Store 32(fragcolor) 48
                              Line 1 38 0
                              Store 50(i) 16
                              Branch 51
              51:             Label
                              LoopMerge 53 54 None
                              Branch 55
              55:             Label
              56:     15(int) Load 50(i)
              59:    58(bool) SLessThan 56 57(NUM_LIGHTS)
                              BranchConditional 59 52 53
              52:               Label
                                Line 1 41 0
              62:     15(int)   Load 50(i)
              63:     44(ptr)   AccessChain 42 61 62 16
              64:   19(fvec4)   Load 63
              65:    8(fvec3)   VectorShuffle 64 64 0 1 2
              66:    8(fvec3)   Load 10(fragPos)
              67:    8(fvec3)   FSub 65 66
                                Store 60(L) 67
                                Line 1 43 0
              70:    8(fvec3)   Load 60(L)
              71:    7(float)   ExtInst 2(GLSL.std.450) 66(Length) 70
                                Store 69(dist) 71
                                Line 1 46 0
              74:     44(ptr)   AccessChain 42 73
              75:   19(fvec4)   Load 74
              76:    8(fvec3)   VectorShuffle 75 75 0 1 2
              77:    8(fvec3)   Load 10(fragPos)
              78:    8(fvec3)   FSub 76 77
                                Store 72(V) 78
                                Line 1 47 0
              79:    8(fvec3)   Load 72(V)
              80:    8(fvec3)   ExtInst 2(GLSL.std.450) 69(Normalize) 79
                                Store 72(V) 80
                                Line 1 50 0
              81:    8(fvec3)   Load 60(L)
              82:    8(fvec3)   ExtInst 2(GLSL.std.450) 69(Normalize) 81
                                Store 60(L) 82
                                Line 1 53 0
              84:     15(int)   Load 50(i)
              86:     85(ptr)   AccessChain 42 61 84 73
              87:    7(float)   Load 86
              88:    7(float)   Load 69(dist)
              90:    7(float)   ExtInst 2(GLSL.std.450) 26(Pow) 88 89
              92:    7(float)   FAdd 90 91
              93:    7(float)   FDiv 87 92
                                Store 83(atten) 93
                                Line 1 56 0
              95:    8(fvec3)   Load 22(normal)
              96:    8(fvec3)   ExtInst 2(GLSL.std.450) 69(Normalize) 95
                                Store 94(N) 96
                                Line 1 57 0
              99:    8(fvec3)   Load 94(N)
             100:    8(fvec3)   Load 60(L)
             101:    7(float)   Dot 99 100
             102:    7(float)   ExtInst 2(GLSL.std.450) 40(FMax) 98 101
                                Store 97(NdotL) 102
                                Line 1 58 0
             104:     15(int)   Load 50(i)
             107:    106(ptr)   AccessChain 42 61 104 105
             108:    8(fvec3)   Load 107
             109:   19(fvec4)   Load 28(albedo)
             110:    8(fvec3)   VectorShuffle 109 109 0 1 2
             111:    8(fvec3)   FMul 108 110
             112:    7(float)   Load 97(NdotL)
             113:    8(fvec3)   VectorTimesScalar 111 112
             114:    7(float)   Load 83(atten)
             115:    8(fvec3)   VectorTimesScalar 113 114
                                Store 103(diff) 115
                                Line 1 62 0
             117:    8(fvec3)   Load 60(L)
             118:    8(fvec3)   FNegate 117
             119:    8(fvec3)   Load 94(N)
             120:    8(fvec3)   ExtInst 2(GLSL.std.450) 71(Reflect) 118 119
                                Store 116(R) 120
                                Line 1 63 0
             122:    8(fvec3)   Load 116(R)
             123:    8(fvec3)   Load 72(V)
             124:    7(float)   Dot 122 123
             125:    7(float)   ExtInst 2(GLSL.std.450) 40(FMax) 98 124
                                Store 121(NdotR) 125
                                Line 1 66 0
             126:    8(fvec3)   Load 103(diff)
             127:    8(fvec3)   Load 32(fragcolor)
             128:    8(fvec3)   FAdd 127 126
                                Store 32(fragcolor) 128
                                Branch 54
              54:               Label
                                Line 1 38 0
             129:     15(int)   Load 50(i)
             130:     15(int)   IAdd 129 105
                                Store 50(i) 130
                                Branch 51
              53:             Label
                              Line 1 69 0
             133:    8(fvec3) Load 32(fragcolor)
             134:    7(float) CompositeExtract 133 0
             135:    7(float) CompositeExtract 133 1
             136:    7(float) CompositeExtract 133 2
             137:   19(fvec4) CompositeConstruct 134 135 136 91
                              Store 132(outColor) 137
                              Return
                              FunctionEnd
